// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.5
// source: hivemapper/v1/hivemapper.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DriverPayment_DRIVER_TYPE int32

const (
	DriverPayment_UNSET    DriverPayment_DRIVER_TYPE = 0
	DriverPayment_REGULAR  DriverPayment_DRIVER_TYPE = 1 // Someone not part of a fleet
	DriverPayment_NO_SPLIT DriverPayment_DRIVER_TYPE = 2 // We can't know if it's a manager or a fleet member at this point
)

// Enum value maps for DriverPayment_DRIVER_TYPE.
var (
	DriverPayment_DRIVER_TYPE_name = map[int32]string{
		0: "UNSET",
		1: "REGULAR",
		2: "NO_SPLIT",
	}
	DriverPayment_DRIVER_TYPE_value = map[string]int32{
		"UNSET":    0,
		"REGULAR":  1,
		"NO_SPLIT": 2,
	}
)

func (x DriverPayment_DRIVER_TYPE) Enum() *DriverPayment_DRIVER_TYPE {
	p := new(DriverPayment_DRIVER_TYPE)
	*p = x
	return p
}

func (x DriverPayment_DRIVER_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DriverPayment_DRIVER_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_hivemapper_v1_hivemapper_proto_enumTypes[0].Descriptor()
}

func (DriverPayment_DRIVER_TYPE) Type() protoreflect.EnumType {
	return &file_hivemapper_v1_hivemapper_proto_enumTypes[0]
}

func (x DriverPayment_DRIVER_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DriverPayment_DRIVER_TYPE.Descriptor instead.
func (DriverPayment_DRIVER_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{3, 0}
}

type TokenSplittingPayments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payments []*TokenSplittingPayment `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *TokenSplittingPayments) Reset() {
	*x = TokenSplittingPayments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenSplittingPayments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenSplittingPayments) ProtoMessage() {}

func (x *TokenSplittingPayments) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenSplittingPayments.ProtoReflect.Descriptor instead.
func (*TokenSplittingPayments) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{0}
}

func (x *TokenSplittingPayments) GetPayments() []*TokenSplittingPayment {
	if x != nil {
		return x.Payments
	}
	return nil
}

type TokenSplittingPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manager *Payment `protobuf:"bytes,1,opt,name=manager,proto3" json:"manager,omitempty"`
	Driver  *Payment `protobuf:"bytes,2,opt,name=driver,proto3" json:"driver,omitempty"`
}

func (x *TokenSplittingPayment) Reset() {
	*x = TokenSplittingPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenSplittingPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenSplittingPayment) ProtoMessage() {}

func (x *TokenSplittingPayment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenSplittingPayment.ProtoReflect.Descriptor instead.
func (*TokenSplittingPayment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{1}
}

func (x *TokenSplittingPayment) GetManager() *Payment {
	if x != nil {
		return x.Manager
	}
	return nil
}

func (x *TokenSplittingPayment) GetDriver() *Payment {
	if x != nil {
		return x.Driver
	}
	return nil
}

type DriverPayments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*DriverPayment `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *DriverPayments) Reset() {
	*x = DriverPayments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverPayments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverPayments) ProtoMessage() {}

func (x *DriverPayments) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverPayments.ProtoReflect.Descriptor instead.
func (*DriverPayments) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{2}
}

func (x *DriverPayments) GetRewards() []*DriverPayment {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type DriverPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment *Payment                  `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
	Type    DriverPayment_DRIVER_TYPE `protobuf:"varint,2,opt,name=type,proto3,enum=hivemapper.types.v1.DriverPayment_DRIVER_TYPE" json:"type,omitempty"`
}

func (x *DriverPayment) Reset() {
	*x = DriverPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverPayment) ProtoMessage() {}

func (x *DriverPayment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverPayment.ProtoReflect.Descriptor instead.
func (*DriverPayment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{3}
}

func (x *DriverPayment) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *DriverPayment) GetType() DriverPayment_DRIVER_TYPE {
	if x != nil {
		return x.Type
	}
	return DriverPayment_UNSET
}

type DriverFoundationPayments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*DriverFoundationPayment `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *DriverFoundationPayments) Reset() {
	*x = DriverFoundationPayments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverFoundationPayments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverFoundationPayments) ProtoMessage() {}

func (x *DriverFoundationPayments) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverFoundationPayments.ProtoReflect.Descriptor instead.
func (*DriverFoundationPayments) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{4}
}

func (x *DriverFoundationPayments) GetRewards() []*DriverFoundationPayment {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type DriverFoundationPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment *Payment `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *DriverFoundationPayment) Reset() {
	*x = DriverFoundationPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverFoundationPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverFoundationPayment) ProtoMessage() {}

func (x *DriverFoundationPayment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverFoundationPayment.ProtoReflect.Descriptor instead.
func (*DriverFoundationPayment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{5}
}

func (x *DriverFoundationPayment) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type AiTrainerPayments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payments []*AiTrainerPayment `protobuf:"bytes,1,rep,name=payments,proto3" json:"payments,omitempty"`
}

func (x *AiTrainerPayments) Reset() {
	*x = AiTrainerPayments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiTrainerPayments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiTrainerPayments) ProtoMessage() {}

func (x *AiTrainerPayments) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiTrainerPayments.ProtoReflect.Descriptor instead.
func (*AiTrainerPayments) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{6}
}

func (x *AiTrainerPayments) GetPayments() []*AiTrainerPayment {
	if x != nil {
		return x.Payments
	}
	return nil
}

type AiTrainerPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payment *Payment `protobuf:"bytes,1,opt,name=payment,proto3" json:"payment,omitempty"`
}

func (x *AiTrainerPayment) Reset() {
	*x = AiTrainerPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiTrainerPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiTrainerPayment) ProtoMessage() {}

func (x *AiTrainerPayment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiTrainerPayment.ProtoReflect.Descriptor instead.
func (*AiTrainerPayment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{7}
}

func (x *AiTrainerPayment) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Address       string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Amount        int64  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{8}
}

func (x *Payment) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Payment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Payment) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Payment) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Transfers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transfers []*Transfer `protobuf:"bytes,1,rep,name=transfers,proto3" json:"transfers,omitempty"`
}

func (x *Transfers) Reset() {
	*x = Transfers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfers) ProtoMessage() {}

func (x *Transfers) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfers.ProtoReflect.Descriptor instead.
func (*Transfers) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{9}
}

func (x *Transfers) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxId     string `protobuf:"bytes,1,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	From      string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To        string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Amount    int64  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{10}
}

func (x *Transfer) GetTrxId() string {
	if x != nil {
		return x.TrxId
	}
	return ""
}

func (x *Transfer) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transfer) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transfer) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transfer) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Mints struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mints []*Mint `protobuf:"bytes,1,rep,name=mints,proto3" json:"mints,omitempty"`
}

func (x *Mints) Reset() {
	*x = Mints{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mints) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mints) ProtoMessage() {}

func (x *Mints) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mints.ProtoReflect.Descriptor instead.
func (*Mints) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{11}
}

func (x *Mints) GetMints() []*Mint {
	if x != nil {
		return x.Mints
	}
	return nil
}

type Mint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxId     string `protobuf:"bytes,1,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	To        string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Amount    int64  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Mint) Reset() {
	*x = Mint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mint) ProtoMessage() {}

func (x *Mint) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mint.ProtoReflect.Descriptor instead.
func (*Mint) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{12}
}

func (x *Mint) GetTrxId() string {
	if x != nil {
		return x.TrxId
	}
	return ""
}

func (x *Mint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Mint) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Mint) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Burns struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Burns []*Burn `protobuf:"bytes,1,rep,name=burns,proto3" json:"burns,omitempty"`
}

func (x *Burns) Reset() {
	*x = Burns{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Burns) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Burns) ProtoMessage() {}

func (x *Burns) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Burns.ProtoReflect.Descriptor instead.
func (*Burns) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{13}
}

func (x *Burns) GetBurns() []*Burn {
	if x != nil {
		return x.Burns
	}
	return nil
}

type Burn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxId     string `protobuf:"bytes,1,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	From      string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Amount    int64  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Burn) Reset() {
	*x = Burn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Burn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Burn) ProtoMessage() {}

func (x *Burn) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Burn.ProtoReflect.Descriptor instead.
func (*Burn) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{14}
}

func (x *Burn) GetTrxId() string {
	if x != nil {
		return x.TrxId
	}
	return ""
}

func (x *Burn) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Burn) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Burn) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type TransferCheckeds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferCheckeds []*TransferChecked `protobuf:"bytes,1,rep,name=transfer_checkeds,json=transferCheckeds,proto3" json:"transfer_checkeds,omitempty"`
}

func (x *TransferCheckeds) Reset() {
	*x = TransferCheckeds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCheckeds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCheckeds) ProtoMessage() {}

func (x *TransferCheckeds) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCheckeds.ProtoReflect.Descriptor instead.
func (*TransferCheckeds) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{15}
}

func (x *TransferCheckeds) GetTransferCheckeds() []*TransferChecked {
	if x != nil {
		return x.TransferCheckeds
	}
	return nil
}

type TransferChecked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxId     string `protobuf:"bytes,1,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	From      string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To        string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Amount    int64  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Decimals  int32  `protobuf:"varint,6,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *TransferChecked) Reset() {
	*x = TransferChecked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferChecked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferChecked) ProtoMessage() {}

func (x *TransferChecked) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferChecked.ProtoReflect.Descriptor instead.
func (*TransferChecked) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{16}
}

func (x *TransferChecked) GetTrxId() string {
	if x != nil {
		return x.TrxId
	}
	return ""
}

func (x *TransferChecked) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransferChecked) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *TransferChecked) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *TransferChecked) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *TransferChecked) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type MintToCheckeds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MintCheckeds []*MintToChecked `protobuf:"bytes,1,rep,name=mint_checkeds,json=mintCheckeds,proto3" json:"mint_checkeds,omitempty"`
}

func (x *MintToCheckeds) Reset() {
	*x = MintToCheckeds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintToCheckeds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintToCheckeds) ProtoMessage() {}

func (x *MintToCheckeds) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintToCheckeds.ProtoReflect.Descriptor instead.
func (*MintToCheckeds) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{17}
}

func (x *MintToCheckeds) GetMintCheckeds() []*MintToChecked {
	if x != nil {
		return x.MintCheckeds
	}
	return nil
}

type MintToChecked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxId     string `protobuf:"bytes,1,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	To        string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Amount    int64  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Decimals  int32  `protobuf:"varint,6,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *MintToChecked) Reset() {
	*x = MintToChecked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintToChecked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintToChecked) ProtoMessage() {}

func (x *MintToChecked) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintToChecked.ProtoReflect.Descriptor instead.
func (*MintToChecked) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{18}
}

func (x *MintToChecked) GetTrxId() string {
	if x != nil {
		return x.TrxId
	}
	return ""
}

func (x *MintToChecked) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MintToChecked) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MintToChecked) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *MintToChecked) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type BurnCheckeds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BurnCheckeds []*BurnChecked `protobuf:"bytes,1,rep,name=burn_checkeds,json=burnCheckeds,proto3" json:"burn_checkeds,omitempty"`
}

func (x *BurnCheckeds) Reset() {
	*x = BurnCheckeds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnCheckeds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnCheckeds) ProtoMessage() {}

func (x *BurnCheckeds) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnCheckeds.ProtoReflect.Descriptor instead.
func (*BurnCheckeds) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{19}
}

func (x *BurnCheckeds) GetBurnCheckeds() []*BurnChecked {
	if x != nil {
		return x.BurnCheckeds
	}
	return nil
}

type BurnChecked struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxId     string `protobuf:"bytes,1,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	Timestamp int64  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	From      string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Amount    int64  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Decimals  int32  `protobuf:"varint,6,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *BurnChecked) Reset() {
	*x = BurnChecked{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnChecked) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnChecked) ProtoMessage() {}

func (x *BurnChecked) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnChecked.ProtoReflect.Descriptor instead.
func (*BurnChecked) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{20}
}

func (x *BurnChecked) GetTrxId() string {
	if x != nil {
		return x.TrxId
	}
	return ""
}

func (x *BurnChecked) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *BurnChecked) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *BurnChecked) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *BurnChecked) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

var File_hivemapper_v1_hivemapper_proto protoreflect.FileDescriptor

var file_hivemapper_v1_hivemapper_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0x60, 0x0a, 0x16, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x46, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x69, 0x76, 0x65,
	0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x22,
	0x4e, 0x0a, 0x0e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x3c, 0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22,
	0xc0, 0x01, 0x0a, 0x0d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x52, 0x49, 0x56,
	0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a,
	0x0b, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x12, 0x09, 0x0a, 0x05,
	0x55, 0x4e, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x47, 0x55, 0x4c,
	0x41, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x53, 0x50, 0x4c, 0x49, 0x54,
	0x10, 0x02, 0x22, 0x62, 0x0a, 0x18, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x46,
	0x0a, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x75, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x17, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x56, 0x0a, 0x11, 0x41, 0x69, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x41,
	0x0a, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x4a, 0x0a, 0x10, 0x41, 0x69, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x80, 0x01,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x48, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x22, 0x7b, 0x0a, 0x08, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x78, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x05, 0x4d, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x2f, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x74,
	0x73, 0x22, 0x63, 0x0a, 0x04, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x72, 0x78,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x78, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x0e,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x05, 0x42, 0x75, 0x72, 0x6e, 0x73, 0x12,
	0x2f, 0x0a, 0x05, 0x62, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x05, 0x62, 0x75, 0x72, 0x6e, 0x73,
	0x22, 0x67, 0x0a, 0x04, 0x42, 0x75, 0x72, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x78, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x10, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x73, 0x12, 0x51, 0x0a,
	0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x10,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x73,
	0x22, 0x9e, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x72, 0x78, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x22, 0x59, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x73, 0x12, 0x47, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x68, 0x69, 0x76,
	0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x0c,
	0x6d, 0x69, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x73, 0x22, 0x88, 0x01, 0x0a,
	0x0d, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x72, 0x78, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x55, 0x0a, 0x0c, 0x42, 0x75, 0x72, 0x6e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x73, 0x12, 0x45, 0x0a, 0x0d, 0x62, 0x75, 0x72, 0x6e, 0x5f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64,
	0x52, 0x0c, 0x62, 0x75, 0x72, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x73, 0x22, 0x8a,
	0x01, 0x0a, 0x0b, 0x42, 0x75, 0x72, 0x6e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x74, 0x72, 0x78, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x72, 0x78, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_hivemapper_v1_hivemapper_proto_rawDescOnce sync.Once
	file_hivemapper_v1_hivemapper_proto_rawDescData = file_hivemapper_v1_hivemapper_proto_rawDesc
)

func file_hivemapper_v1_hivemapper_proto_rawDescGZIP() []byte {
	file_hivemapper_v1_hivemapper_proto_rawDescOnce.Do(func() {
		file_hivemapper_v1_hivemapper_proto_rawDescData = protoimpl.X.CompressGZIP(file_hivemapper_v1_hivemapper_proto_rawDescData)
	})
	return file_hivemapper_v1_hivemapper_proto_rawDescData
}

var file_hivemapper_v1_hivemapper_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hivemapper_v1_hivemapper_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_hivemapper_v1_hivemapper_proto_goTypes = []interface{}{
	(DriverPayment_DRIVER_TYPE)(0),   // 0: hivemapper.types.v1.DriverPayment.DRIVER_TYPE
	(*TokenSplittingPayments)(nil),   // 1: hivemapper.types.v1.TokenSplittingPayments
	(*TokenSplittingPayment)(nil),    // 2: hivemapper.types.v1.TokenSplittingPayment
	(*DriverPayments)(nil),           // 3: hivemapper.types.v1.DriverPayments
	(*DriverPayment)(nil),            // 4: hivemapper.types.v1.DriverPayment
	(*DriverFoundationPayments)(nil), // 5: hivemapper.types.v1.DriverFoundationPayments
	(*DriverFoundationPayment)(nil),  // 6: hivemapper.types.v1.DriverFoundationPayment
	(*AiTrainerPayments)(nil),        // 7: hivemapper.types.v1.AiTrainerPayments
	(*AiTrainerPayment)(nil),         // 8: hivemapper.types.v1.AiTrainerPayment
	(*Payment)(nil),                  // 9: hivemapper.types.v1.Payment
	(*Transfers)(nil),                // 10: hivemapper.types.v1.Transfers
	(*Transfer)(nil),                 // 11: hivemapper.types.v1.Transfer
	(*Mints)(nil),                    // 12: hivemapper.types.v1.Mints
	(*Mint)(nil),                     // 13: hivemapper.types.v1.Mint
	(*Burns)(nil),                    // 14: hivemapper.types.v1.Burns
	(*Burn)(nil),                     // 15: hivemapper.types.v1.Burn
	(*TransferCheckeds)(nil),         // 16: hivemapper.types.v1.TransferCheckeds
	(*TransferChecked)(nil),          // 17: hivemapper.types.v1.TransferChecked
	(*MintToCheckeds)(nil),           // 18: hivemapper.types.v1.MintToCheckeds
	(*MintToChecked)(nil),            // 19: hivemapper.types.v1.MintToChecked
	(*BurnCheckeds)(nil),             // 20: hivemapper.types.v1.BurnCheckeds
	(*BurnChecked)(nil),              // 21: hivemapper.types.v1.BurnChecked
}
var file_hivemapper_v1_hivemapper_proto_depIdxs = []int32{
	2,  // 0: hivemapper.types.v1.TokenSplittingPayments.payments:type_name -> hivemapper.types.v1.TokenSplittingPayment
	9,  // 1: hivemapper.types.v1.TokenSplittingPayment.manager:type_name -> hivemapper.types.v1.Payment
	9,  // 2: hivemapper.types.v1.TokenSplittingPayment.driver:type_name -> hivemapper.types.v1.Payment
	4,  // 3: hivemapper.types.v1.DriverPayments.rewards:type_name -> hivemapper.types.v1.DriverPayment
	9,  // 4: hivemapper.types.v1.DriverPayment.payment:type_name -> hivemapper.types.v1.Payment
	0,  // 5: hivemapper.types.v1.DriverPayment.type:type_name -> hivemapper.types.v1.DriverPayment.DRIVER_TYPE
	6,  // 6: hivemapper.types.v1.DriverFoundationPayments.rewards:type_name -> hivemapper.types.v1.DriverFoundationPayment
	9,  // 7: hivemapper.types.v1.DriverFoundationPayment.payment:type_name -> hivemapper.types.v1.Payment
	8,  // 8: hivemapper.types.v1.AiTrainerPayments.payments:type_name -> hivemapper.types.v1.AiTrainerPayment
	9,  // 9: hivemapper.types.v1.AiTrainerPayment.payment:type_name -> hivemapper.types.v1.Payment
	11, // 10: hivemapper.types.v1.Transfers.transfers:type_name -> hivemapper.types.v1.Transfer
	13, // 11: hivemapper.types.v1.Mints.mints:type_name -> hivemapper.types.v1.Mint
	15, // 12: hivemapper.types.v1.Burns.burns:type_name -> hivemapper.types.v1.Burn
	17, // 13: hivemapper.types.v1.TransferCheckeds.transfer_checkeds:type_name -> hivemapper.types.v1.TransferChecked
	19, // 14: hivemapper.types.v1.MintToCheckeds.mint_checkeds:type_name -> hivemapper.types.v1.MintToChecked
	21, // 15: hivemapper.types.v1.BurnCheckeds.burn_checkeds:type_name -> hivemapper.types.v1.BurnChecked
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_hivemapper_v1_hivemapper_proto_init() }
func file_hivemapper_v1_hivemapper_proto_init() {
	if File_hivemapper_v1_hivemapper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hivemapper_v1_hivemapper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenSplittingPayments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenSplittingPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverPayments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverFoundationPayments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverFoundationPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiTrainerPayments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiTrainerPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mints); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Burns); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Burn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCheckeds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferChecked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintToCheckeds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintToChecked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnCheckeds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnChecked); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hivemapper_v1_hivemapper_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hivemapper_v1_hivemapper_proto_goTypes,
		DependencyIndexes: file_hivemapper_v1_hivemapper_proto_depIdxs,
		EnumInfos:         file_hivemapper_v1_hivemapper_proto_enumTypes,
		MessageInfos:      file_hivemapper_v1_hivemapper_proto_msgTypes,
	}.Build()
	File_hivemapper_v1_hivemapper_proto = out.File
	file_hivemapper_v1_hivemapper_proto_rawDesc = nil
	file_hivemapper_v1_hivemapper_proto_goTypes = nil
	file_hivemapper_v1_hivemapper_proto_depIdxs = nil
}
