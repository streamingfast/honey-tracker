// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.5
// source: hivemapper/v1/hivemapper.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenSplittingPayments []*TokenSplittingPayment `protobuf:"bytes,10,rep,name=token_splitting_payments,json=tokenSplittingPayments,proto3" json:"token_splitting_payments,omitempty"`
	RegularDriverPayments  []*RegularDriverPayment  `protobuf:"bytes,20,rep,name=regular_driver_payments,json=regularDriverPayments,proto3" json:"regular_driver_payments,omitempty"`
	NoSplitPayments        []*NoSplitPayment        `protobuf:"bytes,30,rep,name=no_split_payments,json=noSplitPayments,proto3" json:"no_split_payments,omitempty"`
	Payments               []*Payment               `protobuf:"bytes,40,rep,name=payments,proto3" json:"payments,omitempty"`
	AiTrainerPayments      []*AiTrainerPayment      `protobuf:"bytes,50,rep,name=ai_trainer_payments,json=aiTrainerPayments,proto3" json:"ai_trainer_payments,omitempty"`
	Transfers              []*Transfer              `protobuf:"bytes,60,rep,name=transfers,proto3" json:"transfers,omitempty"`
	Mints                  []*Mint                  `protobuf:"bytes,70,rep,name=mints,proto3" json:"mints,omitempty"`
	Burns                  []*Burn                  `protobuf:"bytes,80,rep,name=burns,proto3" json:"burns,omitempty"`
	InitializedAccount     []*InitializedAccount    `protobuf:"bytes,120,rep,name=initialized_account,json=initializedAccount,proto3" json:"initialized_account,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{0}
}

func (x *Output) GetTokenSplittingPayments() []*TokenSplittingPayment {
	if x != nil {
		return x.TokenSplittingPayments
	}
	return nil
}

func (x *Output) GetRegularDriverPayments() []*RegularDriverPayment {
	if x != nil {
		return x.RegularDriverPayments
	}
	return nil
}

func (x *Output) GetNoSplitPayments() []*NoSplitPayment {
	if x != nil {
		return x.NoSplitPayments
	}
	return nil
}

func (x *Output) GetPayments() []*Payment {
	if x != nil {
		return x.Payments
	}
	return nil
}

func (x *Output) GetAiTrainerPayments() []*AiTrainerPayment {
	if x != nil {
		return x.AiTrainerPayments
	}
	return nil
}

func (x *Output) GetTransfers() []*Transfer {
	if x != nil {
		return x.Transfers
	}
	return nil
}

func (x *Output) GetMints() []*Mint {
	if x != nil {
		return x.Mints
	}
	return nil
}

func (x *Output) GetBurns() []*Burn {
	if x != nil {
		return x.Burns
	}
	return nil
}

func (x *Output) GetInitializedAccount() []*InitializedAccount {
	if x != nil {
		return x.InitializedAccount
	}
	return nil
}

type TokenSplittingPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagerMint *Mint `protobuf:"bytes,1,opt,name=manager_mint,json=managerMint,proto3" json:"manager_mint,omitempty"`
	DriverMint  *Mint `protobuf:"bytes,2,opt,name=driver_mint,json=driverMint,proto3" json:"driver_mint,omitempty"`
}

func (x *TokenSplittingPayment) Reset() {
	*x = TokenSplittingPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenSplittingPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenSplittingPayment) ProtoMessage() {}

func (x *TokenSplittingPayment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenSplittingPayment.ProtoReflect.Descriptor instead.
func (*TokenSplittingPayment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{1}
}

func (x *TokenSplittingPayment) GetManagerMint() *Mint {
	if x != nil {
		return x.ManagerMint
	}
	return nil
}

func (x *TokenSplittingPayment) GetDriverMint() *Mint {
	if x != nil {
		return x.DriverMint
	}
	return nil
}

type RegularDriverPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint *Mint `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *RegularDriverPayment) Reset() {
	*x = RegularDriverPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegularDriverPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegularDriverPayment) ProtoMessage() {}

func (x *RegularDriverPayment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegularDriverPayment.ProtoReflect.Descriptor instead.
func (*RegularDriverPayment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{2}
}

func (x *RegularDriverPayment) GetMint() *Mint {
	if x != nil {
		return x.Mint
	}
	return nil
}

type NoSplitPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint *Mint `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *NoSplitPayment) Reset() {
	*x = NoSplitPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoSplitPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoSplitPayment) ProtoMessage() {}

func (x *NoSplitPayment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoSplitPayment.ProtoReflect.Descriptor instead.
func (*NoSplitPayment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{3}
}

func (x *NoSplitPayment) GetMint() *Mint {
	if x != nil {
		return x.Mint
	}
	return nil
}

type AiTrainerPayment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint *Mint `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *AiTrainerPayment) Reset() {
	*x = AiTrainerPayment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiTrainerPayment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiTrainerPayment) ProtoMessage() {}

func (x *AiTrainerPayment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiTrainerPayment.ProtoReflect.Descriptor instead.
func (*AiTrainerPayment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{4}
}

func (x *AiTrainerPayment) GetMint() *Mint {
	if x != nil {
		return x.Mint
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint *Mint `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{5}
}

func (x *Payment) GetMint() *Mint {
	if x != nil {
		return x.Mint
	}
	return nil
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxHash   string  `protobuf:"bytes,1,opt,name=trx_hash,json=trxHash,proto3" json:"trx_hash,omitempty"`
	Timestamp int64   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	From      string  `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To        string  `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Amount    float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{6}
}

func (x *Transfer) GetTrxHash() string {
	if x != nil {
		return x.TrxHash
	}
	return ""
}

func (x *Transfer) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Transfer) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Transfer) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Transfer) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Mint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxHash   string  `protobuf:"bytes,1,opt,name=trx_hash,json=trxHash,proto3" json:"trx_hash,omitempty"`
	Timestamp int64   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	To        string  `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Amount    float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Mint) Reset() {
	*x = Mint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mint) ProtoMessage() {}

func (x *Mint) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mint.ProtoReflect.Descriptor instead.
func (*Mint) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{7}
}

func (x *Mint) GetTrxHash() string {
	if x != nil {
		return x.TrxHash
	}
	return ""
}

func (x *Mint) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Mint) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Mint) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type Burn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxHash   string  `protobuf:"bytes,1,opt,name=trx_hash,json=trxHash,proto3" json:"trx_hash,omitempty"`
	Timestamp int64   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	From      string  `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	Amount    float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *Burn) Reset() {
	*x = Burn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Burn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Burn) ProtoMessage() {}

func (x *Burn) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Burn.ProtoReflect.Descriptor instead.
func (*Burn) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{8}
}

func (x *Burn) GetTrxHash() string {
	if x != nil {
		return x.TrxHash
	}
	return ""
}

func (x *Burn) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Burn) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Burn) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type InitializedAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrxHash string `protobuf:"bytes,1,opt,name=trx_hash,json=trxHash,proto3" json:"trx_hash,omitempty"`
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Mint    string `protobuf:"bytes,3,opt,name=mint,proto3" json:"mint,omitempty"`
	Owner   string `protobuf:"bytes,4,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *InitializedAccount) Reset() {
	*x = InitializedAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitializedAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitializedAccount) ProtoMessage() {}

func (x *InitializedAccount) ProtoReflect() protoreflect.Message {
	mi := &file_hivemapper_v1_hivemapper_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitializedAccount.ProtoReflect.Descriptor instead.
func (*InitializedAccount) Descriptor() ([]byte, []int) {
	return file_hivemapper_v1_hivemapper_proto_rawDescGZIP(), []int{9}
}

func (x *InitializedAccount) GetTrxHash() string {
	if x != nil {
		return x.TrxHash
	}
	return ""
}

func (x *InitializedAccount) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *InitializedAccount) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *InitializedAccount) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

var File_hivemapper_v1_hivemapper_proto protoreflect.FileDescriptor

var file_hivemapper_v1_hivemapper_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f,
	0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x22, 0xac, 0x05, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x12, 0x64, 0x0a, 0x18, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x16,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x61, 0x0a, 0x17, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61,
	0x72, 0x5f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x15, 0x72, 0x65, 0x67, 0x75, 0x6c, 0x61, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x11, 0x6e, 0x6f, 0x5f,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x1e,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x6e, 0x6f, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x28, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68,
	0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x55, 0x0a, 0x13, 0x61, 0x69, 0x5f, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x32, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x69, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11, 0x61, 0x69, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x3c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x09, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x46, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69,
	0x6e, 0x74, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x75, 0x72,
	0x6e, 0x73, 0x18, 0x50, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d,
	0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x75, 0x72, 0x6e, 0x52, 0x05, 0x62, 0x75, 0x72, 0x6e, 0x73, 0x12, 0x58, 0x0a, 0x13, 0x69, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x78, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61,
	0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x15, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3c,
	0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65,
	0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52,
	0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0b,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x74, 0x22, 0x45, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x75,
	0x6c, 0x61, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x22,
	0x3f, 0x0a, 0x0e, 0x4e, 0x6f, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74,
	0x22, 0x41, 0x0a, 0x10, 0x41, 0x69, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x6d,
	0x69, 0x6e, 0x74, 0x22, 0x38, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68,
	0x69, 0x76, 0x65, 0x6d, 0x61, 0x70, 0x70, 0x65, 0x72, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x22, 0x7f, 0x0a,
	0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x78,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67,
	0x0a, 0x04, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6b, 0x0a, 0x04, 0x42, 0x75, 0x72, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x73, 0x0a, 0x12, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_hivemapper_v1_hivemapper_proto_rawDescOnce sync.Once
	file_hivemapper_v1_hivemapper_proto_rawDescData = file_hivemapper_v1_hivemapper_proto_rawDesc
)

func file_hivemapper_v1_hivemapper_proto_rawDescGZIP() []byte {
	file_hivemapper_v1_hivemapper_proto_rawDescOnce.Do(func() {
		file_hivemapper_v1_hivemapper_proto_rawDescData = protoimpl.X.CompressGZIP(file_hivemapper_v1_hivemapper_proto_rawDescData)
	})
	return file_hivemapper_v1_hivemapper_proto_rawDescData
}

var file_hivemapper_v1_hivemapper_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_hivemapper_v1_hivemapper_proto_goTypes = []interface{}{
	(*Output)(nil),                // 0: hivemapper.types.v1.Output
	(*TokenSplittingPayment)(nil), // 1: hivemapper.types.v1.TokenSplittingPayment
	(*RegularDriverPayment)(nil),  // 2: hivemapper.types.v1.RegularDriverPayment
	(*NoSplitPayment)(nil),        // 3: hivemapper.types.v1.NoSplitPayment
	(*AiTrainerPayment)(nil),      // 4: hivemapper.types.v1.AiTrainerPayment
	(*Payment)(nil),               // 5: hivemapper.types.v1.Payment
	(*Transfer)(nil),              // 6: hivemapper.types.v1.Transfer
	(*Mint)(nil),                  // 7: hivemapper.types.v1.Mint
	(*Burn)(nil),                  // 8: hivemapper.types.v1.Burn
	(*InitializedAccount)(nil),    // 9: hivemapper.types.v1.InitializedAccount
}
var file_hivemapper_v1_hivemapper_proto_depIdxs = []int32{
	1,  // 0: hivemapper.types.v1.Output.token_splitting_payments:type_name -> hivemapper.types.v1.TokenSplittingPayment
	2,  // 1: hivemapper.types.v1.Output.regular_driver_payments:type_name -> hivemapper.types.v1.RegularDriverPayment
	3,  // 2: hivemapper.types.v1.Output.no_split_payments:type_name -> hivemapper.types.v1.NoSplitPayment
	5,  // 3: hivemapper.types.v1.Output.payments:type_name -> hivemapper.types.v1.Payment
	4,  // 4: hivemapper.types.v1.Output.ai_trainer_payments:type_name -> hivemapper.types.v1.AiTrainerPayment
	6,  // 5: hivemapper.types.v1.Output.transfers:type_name -> hivemapper.types.v1.Transfer
	7,  // 6: hivemapper.types.v1.Output.mints:type_name -> hivemapper.types.v1.Mint
	8,  // 7: hivemapper.types.v1.Output.burns:type_name -> hivemapper.types.v1.Burn
	9,  // 8: hivemapper.types.v1.Output.initialized_account:type_name -> hivemapper.types.v1.InitializedAccount
	7,  // 9: hivemapper.types.v1.TokenSplittingPayment.manager_mint:type_name -> hivemapper.types.v1.Mint
	7,  // 10: hivemapper.types.v1.TokenSplittingPayment.driver_mint:type_name -> hivemapper.types.v1.Mint
	7,  // 11: hivemapper.types.v1.RegularDriverPayment.mint:type_name -> hivemapper.types.v1.Mint
	7,  // 12: hivemapper.types.v1.NoSplitPayment.mint:type_name -> hivemapper.types.v1.Mint
	7,  // 13: hivemapper.types.v1.AiTrainerPayment.mint:type_name -> hivemapper.types.v1.Mint
	7,  // 14: hivemapper.types.v1.Payment.mint:type_name -> hivemapper.types.v1.Mint
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_hivemapper_v1_hivemapper_proto_init() }
func file_hivemapper_v1_hivemapper_proto_init() {
	if File_hivemapper_v1_hivemapper_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hivemapper_v1_hivemapper_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenSplittingPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegularDriverPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoSplitPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiTrainerPayment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Burn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hivemapper_v1_hivemapper_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitializedAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hivemapper_v1_hivemapper_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hivemapper_v1_hivemapper_proto_goTypes,
		DependencyIndexes: file_hivemapper_v1_hivemapper_proto_depIdxs,
		MessageInfos:      file_hivemapper_v1_hivemapper_proto_msgTypes,
	}.Build()
	File_hivemapper_v1_hivemapper_proto = out.File
	file_hivemapper_v1_hivemapper_proto_rawDesc = nil
	file_hivemapper_v1_hivemapper_proto_goTypes = nil
	file_hivemapper_v1_hivemapper_proto_depIdxs = nil
}
